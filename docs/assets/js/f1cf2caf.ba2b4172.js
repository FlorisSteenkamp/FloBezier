"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2640],{1507:function(t,e,r){r.r(e),r.d(e,{assets:function(){return v},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return N},metadata:function(){return h},toc:function(){return y}});var n=r(7462),a=r(3366),o=r(7294),i=r(3905),l=r(2041),m=r(6085),s=r(9354),p=r(3546),u=(0,r(4388).t)(m.E,m.d),d=p.JQ,f=[[1,1],[7.125,10],[17.375,2.875],[5.375,3.125]],c=[{title:"tS",val:.25,min:-1,max:2,step:.01},{title:"tE",val:.75,min:-1,max:2,step:.01}];function k(t){var e=c[0].val,r=c[1].val,n=[f,e,r],a=(0,s.P)(t,"#0f0","transparent"),o=(0,s.P)(t,"#f00","transparent"),i=d.apply(void 0,n);return a(f.map(u)),o(i.map(u)),[{result:i,params:[n]}]}function _(){return o.createElement(o.Fragment,null,o.createElement(l.O,{functionName:d.name,draw:k,draggables:f,scalars:c}))}var b=["components"],N={id:"transformation_split_from_to",title:"from-to"},g=void 0,h={unversionedId:"modules/transformation_split_from_to",id:"modules/transformation_split_from_to",title:"from-to",description:"Defined in transformation/split/from-to.ts:20",source:"@site/docs/modules/transformation_split_from_to.mdx",sourceDirName:"modules",slug:"/modules/transformation_split_from_to",permalink:"/FloBezier/docs/modules/transformation_split_from_to",draft:!1,tags:[],version:"current",frontMatter:{id:"transformation_split_from_to",title:"from-to"},sidebar:"sidebar",previous:{title:"to-cubic",permalink:"/FloBezier/docs/modules/transformation_degree_or_type_to_cubic"},next:{title:"from-to-incl-error-bound",permalink:"/FloBezier/docs/modules/transformation_split_from_to_incl_error_bound"}},v={},y=[{value:"Parameters:",id:"parameters",level:4}],C={toc:y};function w(t){var e=t.components,r=(0,a.Z)(t,b);return(0,i.kt)("wrapper",(0,n.Z)({},C,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"function fromTo(ps: number[][], tS: number, tE: number): number[][]\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Defined in ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloBezier/blob/a2fe14d/src/transformation/split/from-to.ts#L20"},"transformation/split/from-to.ts:20"))),(0,i.kt)("p",null,"Returns a bezier curve that starts and ends at the given ",(0,i.kt)("inlineCode",{parentName:"p"},"t")," parameters."),(0,i.kt)(_,{mdxType:"FromTo"}),(0,i.kt)("h4",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ps")),(0,i.kt)("td",{parentName:"tr",align:null},"number","[][]"),(0,i.kt)("td",{parentName:"tr",align:null},"an order 0,1,2 or 3 bezier curve given as an ordered array of its control point coordinates, e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},"[[0,0], [1,1], [2,1], [2,0]]"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tS")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"the ",(0,i.kt)("inlineCode",{parentName:"td"},"t")," parameter where the resultant bezier should start")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"tE")),(0,i.kt)("td",{parentName:"tr",align:null},"number"),(0,i.kt)("td",{parentName:"tr",align:null},"the ",(0,i.kt)("inlineCode",{parentName:"td"},"t")," parameter where the resultant bezier should end")))))}w.isMDXComponent=!0}}]);