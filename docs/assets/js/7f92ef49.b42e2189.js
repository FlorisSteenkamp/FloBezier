"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3244],{8293:function(e,t,r){r.d(t,{b:function(){return i}});var n=r(3401),i=function(e){return function(t){return(0,n.bA)(t,e)}}},222:function(e,t,r){r.r(t),r.d(t,{assets:function(){return x},contentTitle:function(){return y},default:function(){return E},frontMatter:function(){return N},metadata:function(){return w},toc:function(){return C}});var n=r(7462),i=r(3366),a=r(7294),s=r(3905),o=r(3401),c=r(2041),l=r(6085),u=r(9354),p=r(3546),m=r(4388),b=r(809),d=r(8293),f=(0,m.t)(l.E,l.d),_=p.uw,z=[[1,1],[6,2.5],[2,1],[3,3]].map((0,o.Iu)([4,2])),k=[{pss:[[[6.4,4.8],[15,5],[1,4],[10,4]],[[9.4,.4],[9.3,10.3],[8.1,.1],[7.53125,5.5]]],description:"This example illustrates Bezout's Theorem: a cubic-cubic intersection implies 3x3 = 9 intersections at most."},{pss:[z,(0,p.JQ)(z,-.125,1.125)],description:"Overlapping algebraically identical bezier curves have an infinite number of intersecions; this is indicated by the kind of intersection (kind === 5) and only the intersections at the endpoints of each curve are retrurned "},{pss:[[[1.5,.75]].map((0,d.b)(4)).map((0,o.Iu)([2,2])),[[0,0],[1,1],[2,1],[3,0]].map((0,d.b)(4)).map((0,o.Iu)([2,2]))],description:"point / cubic bezier curve - point is exactly on curve"},{pss:[[[1.5,.75],[1,1],[.5,.375]].map((0,d.b)(4)).map((0,o.Iu)([2,2])),[[0,0],[1,1],[2,1]].map((0,d.b)(4)).map((0,o.Iu)([2,2]))],description:"quadratic / quadratic bezier curves"}];function h(e){return function(t){var r=(0,u.P)(t,"#f00","transparent"),n=(0,u.P)(t,"#0f0","transparent"),i=k[e].pss,a=_.apply(void 0,i);return n(i[1].map(f)),r(i[0].map(f)),a.map((function(e){return r=f((0,p.ku)(i[0],e[0])),(0,b.x)(t,"transparent","#00f")(r,5);var r})),[{result:a,params:[i]}]}}function g(){return a.createElement(a.Fragment,null,a.createElement("p",null,"Some examples are shown below:"),k.map((function(e,t){var r=e.pss;return a.createElement("div",{key:t},a.createElement("p",null,e.description),a.createElement(c.O,{functionName:_.name,draw:h(t),draggables:[].concat(r[0],r[1])}),a.createElement("hr",null))})))}var v=["components"],N={id:"intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",title:"bezier-bezier-intersection-fast"},y=void 0,w={unversionedId:"modules/intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",id:"modules/intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",title:"bezier-bezier-intersection-fast",description:"Defined in intersection/bezier-bezier-intersection-fast/bezier-bezier-intersection-fast.ts:54",source:"@site/docs/modules/intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast.mdx",sourceDirName:"modules",slug:"/modules/intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",permalink:"/FloBezier/docs/modules/intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",draft:!1,tags:[],version:"current",frontMatter:{id:"intersection_bezier_bezier_intersection_fast_bezier_bezier_intersection_fast",title:"bezier-bezier-intersection-fast"},sidebar:"sidebar",previous:{title:"get-implicit-form3-error-counters",permalink:"/FloBezier/docs/modules/implicit_form_get_error_counters_get_implicit_form3_error_counters"},next:{title:"bezier-bezier-intersection",permalink:"/FloBezier/docs/modules/intersection_bezier_bezier_intersection_bezier_bezier_intersection"}},x={},C=[{value:"Parameters:",id:"parameters",level:4}],B={toc:C};function E(e){var t=e.components,r=(0,i.Z)(e,v);return(0,s.kt)("wrapper",(0,n.Z)({},B,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"function bezierBezierIntersectionFast(ps1: number[][], ps2: number[][]): number[][]\n")),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"Defined in ",(0,s.kt)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloBezier/blob/a2fe14d/src/intersection/bezier-bezier-intersection-fast/bezier-bezier-intersection-fast.ts#L54"},"intersection/bezier-bezier-intersection-fast/bezier-bezier-intersection-fast.ts:54"))),(0,s.kt)("p",null,"Accurate, fast (",(0,s.kt)("em",{parentName:"p"},"eventually")," cubically convergent) algorithm that returns\nthe intersections between two bezier curves (of order <= 3)."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"returns an array that contains the ",(0,s.kt)("inlineCode",{parentName:"p"},"t")," paramater pairs at intersection\nof the first and second bezier curves respectively.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Each returned ",(0,s.kt)("inlineCode",{parentName:"p"},"t")," paramter value is mathematically guaranteed to be\naccurate to within 2**-33 or about ten billionths of a unit.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"the algorithm is based on a paper at ",(0,s.kt)("a",{parentName:"p",href:"http://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=2206&context=etd"},"http://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=2206&context=etd"),"\nthat finds the intersection of a fat line and a so-called geometric interval\nmaking it faster than the standard fat-line intersection algorithm (that\nis ",(0,s.kt)("em",{parentName:"p"},"eventually")," only ",(0,s.kt)("em",{parentName:"p"},"quadratically")," convergent)")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("em",{parentName:"p"},"eventually")," cubically convergent (usually converging in about 4 to 8\niterations for typical intersections) but for hard intersections can become\nextremely slow due to sub-linear convergence (and similarly for ",(0,s.kt)("em",{parentName:"p"},"all")," fatline\nalgorithms) in those cases; luckily this algorithm detects those cases and\nreverts to implicitization with strict error bounds to guarantee accuracy\nand efficiency (implicitization is roughly 5x slower but is very rare)"))),(0,s.kt)(g,{mdxType:"BezierBezierIntersectionFast"}),(0,s.kt)("h4",{id:"parameters"},"Parameters:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Name"),(0,s.kt)("th",{parentName:"tr",align:null},"Type"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"ps1")),(0,s.kt)("td",{parentName:"tr",align:null},"number","[][]"),(0,s.kt)("td",{parentName:"tr",align:null},"an order 0,1,2 or 3 bezier curve given as an ordered array of its control point coordinates, e.g. ",(0,s.kt)("inlineCode",{parentName:"td"},"[[0,0], [1,1], [2,1], [2,0]]"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"ps2")),(0,s.kt)("td",{parentName:"tr",align:null},"number","[][]"),(0,s.kt)("td",{parentName:"tr",align:null},"an order 0,1,2 or 3 bezier curve given as an ordered array of its control point coordinates, e.g. ",(0,s.kt)("inlineCode",{parentName:"td"},"[[0,0], [1,1], [2,1], [2,0]]"))))))}E.isMDXComponent=!0}}]);