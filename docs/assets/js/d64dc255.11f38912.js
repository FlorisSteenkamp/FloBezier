"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[622],{4465:function(e,a,n){n.r(a),n.d(a,{assets:function(){return v},contentTitle:function(){return D},default:function(){return P},frontMatter:function(){return y},metadata:function(){return N},toc:function(){return I}});var i=n(7462),t=n(3366),s=n(7294),r=n(3905),l=n(3546),o=n(2041),u=n(6085),p=n(9354),c=n(4388),m=n(3401),f=(0,c.t)(u.E,u.d),d=function(e){return function(a){return(0,m.bA)(a,e)}},b=[[1,1],[5.125,8],[15.375,.875],[4.375,5.125]];function g(e){var a=(0,p.P)(e,"#f80","transparent"),n=[b],i=l.xk.apply(void 0,n);return a(b.map(f)),[{result:i,params:[n]}]}var C=[{ps:[[7,7]],f:l.Gm.isPoint,name:"isPoint"},{ps:[[1,1],[13,6]],f:l.Gm.isLineGeneral,name:"isLineGeneral"},{ps:[[1,1],[1,1]].map((0,m.Iu)([4,4])),f:l.Gm.isLineDegenPoint,name:"isLineDegenPoint"},{ps:[[1,1],[2,2],[3,4]].map((0,m.Iu)([4,4])),f:l.Gm.isQuadGeneral,name:"isQuadGeneral"},{ps:[[1,1],[2,2],[4,4]].map((0,m.Iu)([4,4])),f:l.Gm.isQuadDegenCollinear,name:"isQuadDegenCollinear"},{ps:[[1,1],[2,2],[3,3]].map((0,m.Iu)([4,4])),f:l.Gm.isQuadDegenLine,name:"isQuadDegenLine"},{ps:[[1,1],[1,1],[1,1]].map((0,m.Iu)([4,4])),f:l.Gm.isQuadDegenPoint,name:"isQuadDegenPoint"},{ps:[[0,0],[3,3],[-3,3],[0,1]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicGeneralCrunode,name:"isCubicGeneralCrunode"},{ps:[[0,0],[3,3],[-3,3],[1,0]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicGeneralCrunode,name:"isCubicGeneralCrunode"},{ps:[[0,0],[5,3],[2,3],[4,0]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicGeneralAcnode,name:"isCubicGeneralAcnode"},{ps:[[1,3],[5,-3],[-2,3],[4,-2]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicGeneralAcnode,name:"isCubicGeneralAcnode"},{ps:[[0,0],[6,4],[-0,4],[6,0]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicGeneralCusp,name:"isCubicGeneralCusp"},{ps:(0,l.jX)([[0,0,3,0],[6,-9,3,-6]]).map(d(3)).map((function(e){return[e[0]+6,e[1]+24]})),f:l.Gm.isCubicGeneralExplicit,name:"isCubicGeneralExplicit"},{ps:[[1,1],[2,2],[3,3],[5,5]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicDegenCollinearCubic,name:"isCubicDegenCollinearCubic"},{ps:[[0,0],[1,1],[2,1],[3,0]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicDegenQuad,name:"isCubicDegenQuad"},{ps:(0,l.rA)([[0,0],[3,3],[18,18]]).map(d(.25)).map((0,m.Iu)([2,2])),f:l.Gm.isCubicDegenCollinearQuad,name:"isCubicDegenCollinearQuad"},{ps:[[1,1],[2,2],[3,3],[4,4]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicDegenLine,name:"isCubicDegenLine"},{ps:[[1,1],[1,1],[1,1],[1,1]].map((0,m.Iu)([4,4])),f:l.Gm.isCubicDegenPoint,name:"isCubicDegenPoint"}];function _(e){return function(a){var n=e.ps,i=e.f,t=(0,p.P)(a,"#f80","transparent"),s=[n],r=i.apply(void 0,s);return t(n.map(f)),[{result:r,params:[s]}]}}function G(){return s.createElement(s.Fragment,null,s.createElement(o.O,{functionName:"classify",draw:g,draggables:b}),C.map((function(e){return s.createElement(o.O,{functionName:"classification."+e.name,draw:_(e),draggables:e.ps,dontShowDraggableNote:!0})})))}var k=["components"],y={id:"global_properties_classification_classify",title:"classify"},D=void 0,N={unversionedId:"modules/global_properties_classification_classify",id:"modules/global_properties_classification_classify",title:"classify",description:"Defined in global-properties/classification/classify.ts:199",source:"@site/docs/modules/global_properties_classification_classify.mdx",sourceDirName:"modules",slug:"/modules/global_properties_classification_classify",permalink:"/FloBezier/docs/modules/global_properties_classification_classify",draft:!1,tags:[],version:"current",frontMatter:{id:"global_properties_classification_classify",title:"classify"},sidebar:"sidebar",previous:{title:"get-interval-box-dd",permalink:"/FloBezier/docs/modules/global_properties_bounds_get_interval_box_get_interval_box_dd"},next:{title:"is-collinear",permalink:"/FloBezier/docs/modules/global_properties_classification_is_collinear"}},v={},I=[{value:"Parameters:",id:"parameters",level:4}],h={toc:I};function P(e){var a=e.components,n=(0,t.Z)(e,k);return(0,r.kt)("wrapper",(0,i.Z)({},h,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function classify(ps: number[][]): Classification\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Defined in ",(0,r.kt)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloBezier/blob/a2fe14d/src/global-properties/classification/classify.ts#L199"},"global-properties/classification/classify.ts:199"))),(0,r.kt)("p",null,"Returns a classification of the given bezier curve."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"exact"),": not susceptible to floating point round-off")),(0,r.kt)(G,{mdxType:"Classify"}),(0,r.kt)("h4",{id:"parameters"},"Parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ps")),(0,r.kt)("td",{parentName:"tr",align:null},"number","[][]"),(0,r.kt)("td",{parentName:"tr",align:null},"a bezier curve of order 0,1,2 or 3 given as an array of its control points.")))))}P.isMDXComponent=!0}}]);