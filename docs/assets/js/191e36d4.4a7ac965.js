"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8567],{5934:function(e,t,n){n.r(t),n.d(t,{assets:function(){return w},contentTitle:function(){return v},default:function(){return x},frontMatter:function(){return h},metadata:function(){return y},toc:function(){return C}});var r=n(7462),a=n(3366),i=n(7294),l=n(3905),s=n(3546),u=n(2041),o=n(6085),c=n(9354),m=n(4388),p=n(809),d=(0,m.t)(o.E,o.d),g=s.W9,k=[[1,1],[5.125,8],[15.375,.875]],f=[.25,.75];function N(e){var t=function(t){return(0,p.x)(e,"transparent","#00f")(t,3)},n=(0,c.P)(e,"#0f0","transparent"),r=[k[0],k[1],k[2],f],a=g.apply(void 0,r);return n(a.map(d)),f.map((function(e){return t(d((0,s.ku)(a,f[0])))})),f.map((function(e){return t(d((0,s.ku)(a,f[1])))})),[{result:a,params:[r]}]}function b(){return i.createElement(i.Fragment,null,i.createElement(u.O,{functionName:g.name,draw:N,draggables:k}))}var _=["components"],h={id:"create_generate_self_intersecting",title:"generate-self-intersecting"},v=void 0,y={unversionedId:"modules/create_generate_self_intersecting",id:"modules/create_generate_self_intersecting",title:"generate-self-intersecting",description:"Defined in create/generate-self-intersecting.ts:15",source:"@site/docs/modules/create_generate_self_intersecting.mdx",sourceDirName:"modules",slug:"/modules/create_generate_self_intersecting",permalink:"/FloBezier/docs/modules/create_generate_self_intersecting",draft:!1,tags:[],version:"current",frontMatter:{id:"create_generate_self_intersecting",title:"generate-self-intersecting"},sidebar:"sidebar",previous:{title:"generate-quarter-circle",permalink:"/FloBezier/docs/modules/create_generate_quarter_circle"},next:{title:"fit-quads-to-cubic",permalink:"/FloBezier/docs/modules/fit_fit_quads_to_cubic"}},w={},C=[{value:"Parameters:",id:"parameters",level:4}],z={toc:C};function x(e){var t=e.components,n=(0,a.Z)(e,_);return(0,l.kt)("wrapper",(0,r.Z)({},z,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function generateSelfIntersecting(p0: number[], p1: number[], p2: number[], ts: number[]): number[][]\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Defined in ",(0,l.kt)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloBezier/blob/a2fe14d/src/create/generate-self-intersecting.ts#L15"},"create/generate-self-intersecting.ts:15"))),(0,l.kt)("p",null,"Returns the cubic bezier curve with given starting, 2nd and 3rd control\npoints such that there is a self-intersection."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"in-exact:")," the result may not be exact due to floating point round-off")),(0,l.kt)(b,{mdxType:"GenerateSelfIntersecting"}),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"p0")),(0,l.kt)("td",{parentName:"tr",align:null},"number[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the bezier's initial control point, e.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"[1,2]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"p1")),(0,l.kt)("td",{parentName:"tr",align:null},"number[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the bezier's 2nd control point")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"p2")),(0,l.kt)("td",{parentName:"tr",align:null},"number[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the bezier's 3rd control point")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ts")),(0,l.kt)("td",{parentName:"tr",align:null},"number[]"),(0,l.kt)("td",{parentName:"tr",align:null},"the two ",(0,l.kt)("inlineCode",{parentName:"td"},"t")," values where the self-intersection should occur")))))}x.isMDXComponent=!0}}]);