"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4986],{846:function(e,t,a){a.r(t),a.d(t,{assets:function(){return N},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return y},metadata:function(){return v},toc:function(){return h}});var n=a(7462),r=a(3366),i=a(7294),l=a(3905),o=a(2041),u=a(6085),d=a(9354),p=a(3546),s=(0,a(4388).t)(u.E,u.d),m=p.q8,c=[[1,1],[15,10.3125],[15.375,.875]],f=[{title:"tolerance",val:.023,min:.001,max:1,step:.001}];function k(e){var t=f[0].val,a=[c,t],n=(0,d.P)(e,"#0f0","transparent"),r=(0,d.P)(e,"#ff0","transparent"),i=m.apply(void 0,a);n(c.map(s));for(var l=i[0],o=1;o<i.length;o++){var u=i[o];r([l,u].map(s)),l=u}return[{result:i,params:[a]}]}function _(){return i.createElement(i.Fragment,null,i.createElement(o.O,{functionName:"quadraticToPolyline",draw:k,draggables:c,scalars:f}))}var b=["components"],y={id:"fit_quadratic_to_polyline",title:"quadratic-to-polyline"},g=void 0,v={unversionedId:"modules/fit_quadratic_to_polyline",id:"modules/fit_quadratic_to_polyline",title:"quadratic-to-polyline",description:"Defined in fit/quadratic-to-polyline.ts:31",source:"@site/docs/modules/fit_quadratic_to_polyline.mdx",sourceDirName:"modules",slug:"/modules/fit_quadratic_to_polyline",permalink:"/FloBezier/docs/modules/fit_quadratic_to_polyline",draft:!1,tags:[],version:"current",frontMatter:{id:"fit_quadratic_to_polyline",title:"quadratic-to-polyline"},sidebar:"sidebar",previous:{title:"get-abs-area-between",permalink:"/FloBezier/docs/modules/fit_get_abs_area_between"},next:{title:"from-power-basis",permalink:"/FloBezier/docs/modules/from_power_basis_from_power_basis"}},N={},h=[{value:"Parameters:",id:"parameters",level:4}],q={toc:h};function w(e){var t=e.components,a=(0,r.Z)(e,b);return(0,l.kt)("wrapper",(0,n.Z)({},q,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function quadraticToPolyline(ps: number[][], tolerance?: undefined | number): number[][]\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Defined in fit/quadratic-to-polyline.ts:31")),(0,l.kt)("p",null,"Transforms the given quadratic bezier curve into a polyline approximation to\nwithin a given tolerance and returns the result."),(0,l.kt)(_,{mdxType:"QuadraticToPolyline"}),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ps")),(0,l.kt)("td",{parentName:"tr",align:null},"number","[][]"),(0,l.kt)("td",{parentName:"tr",align:null},"a quadratic bezier curve given as an ordered array of its control point coordinates, e.g. ",(0,l.kt)("inlineCode",{parentName:"td"},"[[0,0], [1,1], [2,1], [2,0]]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tolerance?")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined ","|"," number"),(0,l.kt)("td",{parentName:"tr",align:null},"defaults to ",(0,l.kt)("inlineCode",{parentName:"td"},"2**-10")," of the maximum coordinate of the given bezier curve; a tolerance given as the maximum Hausdorff distance allowed between the polyline and the bezier curve")))))}w.isMDXComponent=!0}}]);