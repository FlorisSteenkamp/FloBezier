"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[695],{3909:function(e,t,a){a.r(t),a.d(t,{assets:function(){return h},contentTitle:function(){return v},default:function(){return C},frontMatter:function(){return g},metadata:function(){return N},toc:function(){return w}});var n=a(7462),r=a(3366),i=a(7294),l=a(3905),s=a(3546),o=a(2041),u=a(6085),m=a(9354),p=(0,a(4388).t)(u.E,u.d),b=s.OP,d=[[3.3125,1.3125],[5.125,8],[15.375,.875],[18.375,9.125]],c=[[3.125,8],[13.375,.875]];function f(e){for(var t=(0,m.P)(e,"#0f0","transparent"),a=(0,m.P)(e,"#f00","transparent"),n=[d[0]].concat(c,[d[3]]),r=[d,n],i=b.apply(void 0,r),l=(0,s.Cn)(d,n),o=[],u=0,f=0,k=0;k<l.length+1;k++){var _=l[k],g=void 0===_?1:_.t1,v=void 0===_?1:_.t2,N=(0,s.JQ)(d,u,g),h=(0,s.JQ)(n,f,v);u=g,f=v,o.push([N,h])}e.strokeStyle="blue",e.fillStyle="blue";for(var w=0,y=o;w<y.length;w++){var C=y[w],T=C[0],z=C[1].slice().reverse(),B=T.map(p),F=B[0],P=B[1],q=B[2],x=B[3],D=F[0],A=F[1],M=P[0],E=P[1],S=q[0],J=q[1],L=x[0],O=x[1],Q=z.map(p),X=Q[1],Z=Q[2],G=Q[3],I=X[0],R=X[1],j=Z[0],H=Z[1],K=G[0],U=G[1];e.beginPath(),e.moveTo(D,A),e.bezierCurveTo(M,E,S,J,L,O),e.bezierCurveTo(I,R,j,H,K,U),e.fill()}return t(d.map(p)),a(n.map(p)),[{result:i,params:[r]}]}function k(){return i.createElement(i.Fragment,null,i.createElement(o.O,{functionName:b.name,draw:f,draggables:[].concat(d,[c[0],c[1]])}))}var _=["components"],g={id:"fit_get_abs_area_between",title:"get-abs-area-between"},v=void 0,N={unversionedId:"modules/fit_get_abs_area_between",id:"modules/fit_get_abs_area_between",title:"get-abs-area-between",description:"Defined in fit/get-abs-area-between.ts:17",source:"@site/docs/modules/fit_get_abs_area_between.mdx",sourceDirName:"modules",slug:"/modules/fit_get_abs_area_between",permalink:"/FloBezier/docs/modules/fit_get_abs_area_between",draft:!1,tags:[],version:"current",frontMatter:{id:"fit_get_abs_area_between",title:"get-abs-area-between"},sidebar:"sidebar",previous:{title:"fit-quads-to-cubic",permalink:"/FloBezier/docs/modules/fit_fit_quads_to_cubic"},next:{title:"quadratic-to-polyline",permalink:"/FloBezier/docs/modules/fit_quadratic_to_polyline"}},h={},w=[{value:"Parameters:",id:"parameters",level:4}],y={toc:w};function C(e){var t=e.components,a=(0,r.Z)(e,_);return(0,l.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function getAbsAreaBetween(ps1: number[][], ps2: number[][]): number\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Defined in ",(0,l.kt)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloBezier/blob/a2fe14d/src/fit/get-abs-area-between.ts#L17"},"fit/get-abs-area-between.ts:17"))),(0,l.kt)("p",null,"Returns the ",(0,l.kt)("em",{parentName:"p"},"absolute")," area between the two given curves."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"precondition"),": the first and last control points of each curve must be equal"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"precondition"),": neither curve should have self-intersections else the results\nare ambiguous"),(0,l.kt)("li",{parentName:"ul"},"can be used as an excellent error measure of the similarity between the two curves")),(0,l.kt)(k,{mdxType:"GetAbsAreaBetween"}),(0,l.kt)("h4",{id:"parameters"},"Parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ps1")),(0,l.kt)("td",{parentName:"tr",align:null},"number","[][]")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ps2")),(0,l.kt)("td",{parentName:"tr",align:null},"number","[][]")))))}C.isMDXComponent=!0}}]);