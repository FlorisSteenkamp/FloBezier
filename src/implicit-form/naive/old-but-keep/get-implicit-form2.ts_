
import { getX } from '../../to-power-basis/get-x';
import { getY } from '../../to-power-basis/get-y';


/**
 * Returns an approximate implicit form of the given quadratic bezier.
 * Adapted from http://www.mare.ee/indrek/misc/2d.pdf
 * @param ps 
 */
function getImplicitForm2_(ps: number[][]) {
    // The implicit form is given by:
    // vₓₓx² +vₓᵧxy + vᵧᵧy² + vₓx + vᵧy + v = 0
    
    let [a2, a1, a0] = getX(ps);
    let [b2, b1, b0] = getY(ps);

     
    // b2**2*x**2
    let vₓₓ = b2*b2;

    // -2*a2*b2*x*y
    let vₓᵧ = -2*a2*b2;

    // a2**2*y**2
    let vᵧᵧ = a2*a2;

    // -2*a0*b2**2 + a1*b1*b2 + 2*a2*b0*b2 - a2*b1**2
    let vₓ = 
        -2*a0*b2*b2 +
           a1*b1*b2 +
         2*a2*b0*b2 -
           a2*b1*b1;

    // 2*a0*a2*b2 - a1**2*b2 + 
    // a1*a2*b1 - 2*a2**2*b0
    let vᵧ = 
        2*a0*a2*b2 -
          a1*a1*b2 +
          a1*a2*b1 -
        2*a2*a2*b0;

    // a0**2*b2**2 - a0*a1*b1*b2 
    // - 2*a0*a2*b0*b2 + a0*a2*b1**2 + 
    // a1**2*b0*b2 - a1*a2*b0*b1 + 
    // a2**2*b0**2
    let v = 
           a0*a0*b2*b2 +
          -a0*a1*b1*b2 +
        -2*a0*a2*b0*b2 +
           a0*a2*b1*b1 +
           a1*a1*b0*b2 +
          -a1*a2*b0*b1 +
           a2*a2*b0*b0;

    return { vₓₓ, vₓᵧ, vᵧᵧ, vₓ, vᵧ, v }
}


export { getImplicitForm2_ }
