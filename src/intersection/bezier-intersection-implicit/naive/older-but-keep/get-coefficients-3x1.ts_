
import { getX } from "../../../to-power-basis/get-x";
import { getY } from "../../../to-power-basis/get-y";
import { getImplicitForm3 } from "../../../implicit-form/naive/get-implicit-form3";


function getCoeffs3x1(ps1: number[][], ps2: number[][]) {
    let { vₓₓₓ, vₓₓᵧ, vₓᵧᵧ, vᵧᵧᵧ, vₓₓ, vₓᵧ, vᵧᵧ, vₓ, vᵧ, v } = 
        getImplicitForm3(ps1);

    let [c1, c0] = getX(ps2);
    let [d1, d0] = getY(ps2);

    let c0c0 = c0*c0;
    let c0c1 = c0*c1;
    let c0d0 = c0*d0;
    let c0d1 = c0*d1;
    let c1c1 = c1*c1;
    let c1d0 = c1*d0;
    let c1d1 = c1*d1;
    let d0d0 = d0*d0;
    let d0d1 = d0*d1;
    let d1d1 = d1*d1;

    let z1 = c0*vₓₓₓ;
    let z2 = c0*vₓₓᵧ;
    let z3 = d0*vₓₓᵧ;
    let z4 = c0*vₓᵧᵧ;
    let z5 = d0*vₓᵧᵧ;
    let z6 = d0*vᵧᵧᵧ;


    // a1**3*v_xxx + a1**2*b1*v_xxy + a1*b1**2*v_xyy + b1**3*v_yyy
    //let v3 =
    //    c1c1*(c1*vₓₓₓ + d1*vₓₓᵧ) +
    //    d1d1*(c1*vₓᵧᵧ + d1*vᵧᵧᵧ);
    let v3 =
        c1c1*(c1*vₓₓₓ + d1*vₓₓᵧ) +
        d1d1*(c1*vₓᵧᵧ + d1*vᵧᵧᵧ);


    // 3*a0*a1**2*v_xxx + 2*a0*a1*b1*v_xxy + a0*b1**2*v_xyy + a1**2*b0*v_xxy + a1**2*v_xx + 2*a1*b0*b1*v_xyy + a1*b1*v_xy + 3*b0*b1**2*v_yyy + b1**2*v_yy
    //let v2 =
    //    c1c1*(3*c0*vₓₓₓ +   d0*vₓₓᵧ + vₓₓ) +
    //    c1d1*(2*c0*vₓₓᵧ + 2*d0*vₓᵧᵧ + vₓᵧ) +
    //    d1d1*(  c0*vₓᵧᵧ + 3*d0*vᵧᵧᵧ + vᵧᵧ);
    let v2 =
        c1c1*(3*c0*vₓₓₓ +   d0*vₓₓᵧ + vₓₓ) +
        c1d1*(2*c0*vₓₓᵧ + 2*d0*vₓᵧᵧ + vₓᵧ) +
        d1d1*(  c0*vₓᵧᵧ + 3*d0*vᵧᵧᵧ + vᵧᵧ);        


    // 3*a0**2*a1*v_xxx + a0**2*b1*v_xxy + 2*a0*a1*b0*v_xxy + 2*a0*a1*v_xx + 2*a0*b0*b1*v_xyy + a0*b1*v_xy + a1*b0**2*v_xyy + a1*b0*v_xy + a1*v_x + 3*b0**2*b1*v_yyy + 2*b0*b1*v_yy + b1*v_y
    //let v1 =
    //    c0c1*(3*c0*vₓₓₓ + 2*(d0*vₓₓᵧ + vₓₓ)) +
    //    d0d1*(3*d0*vᵧᵧᵧ + 2*(c0*vₓᵧᵧ + vᵧᵧ)) +
    //    c0d1*(c0*vₓₓᵧ + vₓᵧ) +
    //    c1d0*(d0*vₓᵧᵧ + vₓᵧ) +
    //    vₓ*c1 +
    //    vᵧ*d1;
    let v1 =
        c0c1*(3*c0*vₓₓₓ + 2*(d0*vₓₓᵧ + vₓₓ)) +
        d0d1*(3*d0*vᵧᵧᵧ + 2*(c0*vₓᵧᵧ + vᵧᵧ)) +
        c0d1*(c0*vₓₓᵧ + vₓᵧ) +
        c1d0*(d0*vₓᵧᵧ + vₓᵧ) +
        c1*vₓ +
        d1*vᵧ;        


    // a0**3*v_xxx + a0**2*b0*v_xxy + a0**2*v_xx + a0*b0**2*v_xyy + a0*b0*v_xy + a0*v_x + b0**3*v_yyy + b0**2*v_yy + b0*v_y + v_0
    //let v0 =
    //    c0c0*(c0*vₓₓₓ + d0*vₓₓᵧ + vₓₓ) +
    //    d0d0*(d0*vᵧᵧᵧ + c0*vₓᵧᵧ + vᵧᵧ) +
    //    c0d0*vₓᵧ +
    //    c0*vₓ    +
    //    d0*vᵧ    +
    //    v;
    let v0 =
        c0c0*(c0*vₓₓₓ + d0*vₓₓᵧ + vₓₓ) +
        d0d0*(d0*vᵧᵧᵧ + c0*vₓᵧᵧ + vᵧᵧ) +
        c0d0*vₓᵧ +
        c0*vₓ    +
        d0*vᵧ    +
        v;        


    return [v3, v2, v1, v0];
}


export { getCoeffs3x1 }
