{"version":3,"names":[],"mappings":"","sources":["src/debug/circle.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Vector = require(\"flo-vector2d\");\nclass Circle {\n    /**\n    * @param center\n    * @param radius\n    */\n    constructor(center, radius) {\n        this.center = center;\n        this.radius = radius;\n    }\n    /**\n     * Returns a scaled version of the given circle without\n     * changing its center position.\n     * @param circle\n     * @param s multiplier\n     */\n    static scale(circle, s) {\n        return new Circle(circle.center, circle.radius * s);\n    }\n    /**\n     * Returns true if the first circle engulfs the second.\n     */\n    static engulfsCircle(c1, c2) {\n        if (c1.radius <= c2.radius) {\n            return false;\n        }\n        let d = Vector.squaredDistanceBetween(c1.center, c2.center);\n        let dr = c1.radius - c2.radius;\n        let δ = dr * dr;\n        return δ > d;\n    }\n    /**\n     * Returns a human-readable string description.\n     */\n    static toString(circle) {\n        return 'c: ' + circle.center + ' radius: ' + circle.radius;\n    }\n}\nexports.Circle = Circle;\n"],"file":"circle.js"}