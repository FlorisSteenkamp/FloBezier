{"version":3,"names":[],"mappings":"","sources":["src/de-casteljau.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction deCasteljau(cs, t) {\n    // See https://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm\n    function f(t) {\n        if (t === 0) {\n            return [[cs[0], cs[0], cs[0], cs[0]], cs];\n        }\n        if (t === 1) {\n            return [cs, [cs[3], cs[3], cs[3], cs[3]]];\n        }\n        let t_ = 1 - t;\n        // j === 0, ..., n (with n === 3 -> cubic bezier)\n        let b00 = cs[0]; // i === 0 \n        let b10 = cs[1]; // i === 1 \n        let b20 = cs[2]; // i === 2 \n        let b30 = cs[3]; // i === 3 \n        // j === 1\n        let b01 = (b00 * t_) + (b10 * t); // i === 0\n        let b11 = (b10 * t_) + (b20 * t); // i === 1\n        let b21 = (b20 * t_) + (b30 * t); // i === 2\n        // j === 2\n        let b02 = (b01 * t_) + (b11 * t); // i === 0\n        let b12 = (b11 * t_) + (b21 * t); // i === 1\n        // j === 3\n        let b03 = (b02 * t_) + (b12 * t); // i === 0\n        return [[b00, b01, b02, b03], [b03, b12, b21, b30]];\n    }\n    return t === undefined ? f : f(t); // Curry\n}\nexports.deCasteljau = deCasteljau;\n"],"file":"de-casteljau.js"}