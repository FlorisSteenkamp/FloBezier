import { expect, assert, use } from 'chai';
import { describe } from 'mocha';
import { nearly } from '../helpers/chai-extend-nearly.js';
import { getRandomCubic } from '../helpers/get-random-bezier.js';
import { randomRotateAndTranslate } from '../helpers/random-rotate-and-translate.js';
import { fitQuadsToCubic } from "../../src/index.js";

use(nearly);

describe('fitQuadsToCubic', function() {
	it('it should approximate the given cubic bezier curve to within a given tolerance to ordered piecewise quadratic bezier curves',
	function() {
		{
			let ps = getRandomCubic(0);
			//[ [88.6401864794642, -105.98771762335389],
			//	[-2.9911163754275094, -46.119759242543864],
			//	[-68.07973490750408, 52.16096196793046],
			//	[119.30512273109173, 88.9937301783342] ]
			// ps = randomRotateAndTranslate(0)(ps);
			const r = fitQuadsToCubic(ps, 1);

			expect(r).to.be.nearly(2**8, [ 
				[[88.6401864794642, -105.98771762335389],
				 [53.39590575322412, -83.14715230934023],
				 [28.423631271446027, -55.444679492023916]],
				[[28.423631271446027, -55.444679492023916],
				 [16.268447338927857, -41.739723428819474],
				 [8.666984817750503, -27.69697256251164]],
				[[8.666984817750514, -27.69697256251166],
				 [1.0655222965731506, -13.654221696203823],
				 [-0.6584055797798554, 0.14120259139253655]],
				[[-0.6584055797798527, 0.14120259139251345],
				 [-2.382333456132863, 13.936626878988864],
				 [3.095086545822009, 26.89960320605889]],
				[[3.0950865458220136, 26.89960320605889],
				 [8.572506547776884, 39.86257953312892],
				 [22.575087661523188, 51.407986517857786]],
				[[22.575087661523177, 51.407986517857765],
				 [36.577668775269466, 62.95339350258663],
				 [60.42922423429072, 72.49610976315944]],
				[[60.42922423429072, 72.49610976315944],
				 [84.28077969331197, 82.03882602373226],
				 [119.30512273109173, 88.9937301783342]]
			]);
		}
	});
});
